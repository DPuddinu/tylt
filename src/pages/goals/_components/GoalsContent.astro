---
import { getActivities } from '@/api/activities/queries';
import { ITEMS_PER_PAGE } from '@/api/goals/queries';
import GoalFilterSidebar from '@/pages/goals/_components/GoalFilters.astro';
import type { GoalFilters, GoalFormParam } from '@/types/filters.types';
import Card from '@components/Card.astro';
import GoalsList from '@components/GoalsList.astro';
import Spinner from '@components/Spinner.astro';
import type { TActivity } from 'db/config';

let activities: TActivity[] = [];
const { user } = Astro.locals;

function getParam(param: string) {
  return Astro.url.searchParams.get(param);
}

function getGoalParam(param: GoalFormParam) {
  return getParam(param);
}
const params = {
  completed: getGoalParam('completed'),
  notCompleted: getGoalParam('notCompleted'),
  expired: getGoalParam('expired'),
  notExpired: getGoalParam('notExpired'),
  fromDate: getGoalParam('fromDate'),
  toDate: getGoalParam('toDate'),
  activity: getGoalParam('activity')
};
const goalFilters: GoalFilters = {
  completed: params.completed === 'on' || undefined,
  notCompleted: params.notCompleted === 'on' || undefined,
  expired: params.expired === 'on' || undefined,
  notExpired: params.notExpired === 'on' || undefined,
  fromDate: params.fromDate || undefined,
  toDate: params.toDate || undefined,
  activity: Number(params.activity) || undefined
};
const offsetFilter = Number(getParam('offset')) || 0;
const currentPage = offsetFilter / ITEMS_PER_PAGE + 1;

try {
  const storedActivities = (await Astro.session?.get('activities')) as TActivity[];
  activities = storedActivities || (await getActivities(user.id));
  if (!storedActivities) {
    Astro.session?.set('activities', activities);
  }
} catch (error) {
  return Astro.redirect('error?redirect=goals');
}
---

<GoalFilterSidebar activities={activities} filters={goalFilters} />
<Card title='Goals'>
  <div slot='header-content' class='flex w-full items-center justify-end'>
    <a
      transition:animate='slide'
      data-astro-prefetch='load'
      href={`/goals/new`}
      class='btn btn-circle btn-warning btn-sm text-base font-extrabold md:btn-md md:text-2xl md:font-bold'
      transition:name='fab'>
      +
    </a>
  </div>
  <GoalsList goalFilters={goalFilters} currentPage={currentPage} params={params} server:defer>
    <Spinner slot='fallback' />
  </GoalsList>
</Card>
