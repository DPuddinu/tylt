---
import { getGoalsCountPerActivity } from '@/api/activities/queries';

const goalsWithActivities = await getGoalsCountPerActivity({ userId: Astro.locals.user.id });
---

<activities-pie-chart
  data-value={JSON.stringify(goalsWithActivities)}
  class='col-span-1 flex h-fit w-full flex-col rounded-lg bg-base-200 p-4 md:col-span-2'>
  <h1 class='pb-4 text-center text-2xl font-bold text-base-content'>Activities</h1>
  <div
    id='pie-chart-container'
    class='flex min-h-[300px] grow animate-pulse flex-col items-start justify-start gap-4 rounded-lg bg-base-100 p-2 px-4'>
    <div id='pie-chart-legend' class='hidden flex-wrap items-center gap-2 px-1'>
      {
        goalsWithActivities.map((activity) => (
          <div class='flex items-center gap-2'>
            <div class='h-2 w-4' style={`background-color: ${activity.color}`} />
            <span>{activity.activityName}</span>
          </div>
        ))
      }
    </div>
    <canvas id='goalsWithActivities' class='max-h-[300px]'></canvas>
  </div>
</activities-pie-chart>

<script>
  import type { ActivityWithGoalCount } from '@/api/activities/queries';
  import { ArcElement, Chart, DoughnutController, Title, Tooltip } from 'chart.js';
  Chart.register(ArcElement, DoughnutController, Title, Tooltip);

  class ActivitiesPieChart extends HTMLElement {
    constructor() {
      super();
      setTimeout(() => {
        const data = this.dataset.value;
        const chart = document.querySelector<HTMLCanvasElement>('#goalsWithActivities');
        let labelColor = 'lightgray';
        const darkModePreference = window.matchMedia('(prefers-color-scheme: dark)');

        if (data && chart) {
          document.querySelector<HTMLDivElement>('#pie-chart-container')?.classList.remove('animate-pulse');
          document.querySelector<HTMLDivElement>('#pie-chart-legend')?.classList.replace('hidden', 'flex');
          const parsedData = JSON.parse(data) as ActivityWithGoalCount[];
          const piechart = new Chart(chart, {
            type: 'doughnut',
            data: {
              datasets: [
                {
                  label: 'Goals',
                  data: parsedData.map((row) => row.goalCount),
                  backgroundColor: parsedData.map((row) => row.color),
                  hoverOffset: 4
                }
              ]
            }
          });

          darkModePreference.addEventListener('change', (e) => {
            labelColor = e.matches ? 'lightgray' : 'black';
            const legend = piechart.options.plugins?.legend?.labels;
            if (legend) {
              legend.color = labelColor;
              piechart.update();
            }
          });
        }
      }, 0);
    }
  }

  customElements.define('activities-pie-chart', ActivitiesPieChart);
</script>
