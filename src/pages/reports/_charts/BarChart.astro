---
---

<activities-bar-chart class='col-span-1 flex h-fit w-full grow flex-col gap-4 rounded-lg bg-base-200 p-4 sm:col-span-2'>
  <h1 class='text-center text-2xl font-bold text-base-content'>Goals per Month</h1>
  <div
    id='bar-chart-container'
    class='flex min-h-[300px] grow flex-col items-center justify-center gap-4 rounded-lg bg-base-100 p-2 px-4'>
    <div id='bar-chart-legend' class='hidden flex-wrap items-center gap-2 px-1'>
      <div class='flex items-center gap-2'>
        <div class='h-2 w-4' style={`background-color: #64d175`}></div>
        <span>Completed</span>
      </div>
      <div class='flex items-center gap-2'>
        <div class='h-2 w-4' style={`background-color: #ef4444`}></div>
        <span>Not Completed</span>
      </div>
    </div>
    <canvas id='chart' class='max-h-[300px] min-h-[300px] md:h-auto'></canvas>
  </div>
</activities-bar-chart>

<script>
  import { BarController, BarElement, CategoryScale, Chart, LinearScale, Title, Tooltip } from 'chart.js';
  import type { CompletionGoal } from '@/pages/api/barchart';
  Chart.register(BarController, BarElement, LinearScale, Tooltip, CategoryScale, Title);

  class ActivitiesBarChart extends HTMLElement {
    constructor() {
      super();
      setTimeout(async () => {
        const data = (await fetch('/api/barchart').then((res) => res.json())) as CompletionGoal[];  
        const chart = document.querySelector<HTMLCanvasElement>('#chart');
        const darkModePreference = window.matchMedia('(prefers-color-scheme: dark)');
        let labelColor = 'lightgray';

        if (data && chart) {
          document.querySelector<HTMLDivElement>('#bar-chart-container')?.classList.remove('animate-pulse');
          document.querySelector<HTMLDivElement>('#bar-chart-legend')?.classList.replace('hidden', 'flex');

          const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
          const barchart = new Chart(chart, {
            type: 'bar',
            options: {
              maintainAspectRatio: false,
              scales: {
                x: {
                  stacked: true,
                  labels: months.map((row) => row),
                  type: 'category',
                  ticks: {
                    color: labelColor,
                    font: {
                      size: 16
                    }
                  }
                },
                y: {
                  stacked: true,
                  ticks: {
                    color: labelColor,
                    stepSize: 1,
                    font: {
                      size: 16
                    }
                  },
                  type: 'linear'
                }
              }
            },
            data: {
              datasets: [
                {
                  label: 'Completed',
                  data: data.map((row) => row.completedCount),
                  backgroundColor: '#64d175',
                  barThickness: 30
                },
                {
                  label: 'Not Completed',
                  data: data.map((row) => row.notCompletedCount),
                  backgroundColor: '#ef4444',
                  barThickness: 30
                }
              ]
            }
          });
          darkModePreference.addEventListener('change', (e) => {
            labelColor = e.matches ? 'lightgray' : 'black';
            const xLabelColor = barchart.options.scales?.x?.ticks;
            const yLabelColor = barchart.options.scales?.y?.ticks;
            if (xLabelColor && yLabelColor) {
              xLabelColor.color = labelColor;
              yLabelColor.color = labelColor;
              barchart.update();
            }
          });
        }
      }, 0);
    }
  }
  customElements.define('activities-bar-chart', ActivitiesBarChart);
</script>
